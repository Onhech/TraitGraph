plot_data$id == plot_data$id[1] ~ 0.5,
c(FALSE, seq_along(plot_data$id[-1]) == ceiling(length(plot_data$id[-1]) / 2)) ~ 0.5,
seq_along(plot_data$id) <= length(plot_data$id) / 2 ~ 0,
TRUE ~ 1
)) +
ggplot2::theme(
plot.margin = ggplot2::unit(c(-3, -4, -3.5, -4), "cm"),
plot.title = ggplot2::element_text(hjust = 0.5, vjust = final_title_vjust, size = final_title_size, face = title_face, color = title_color)
) +
ggplot2::coord_polar(start = -pi / (nrow(plot_data))) +
ggplot2::ggtitle(title_params$text)
if (save_plot) { ggplot2::ggsave(filename = output_path, plot = p, dpi = output_dpi, width = output_width, height = output_height, units = "in"); message("Plot saved to: ", output_path) }
if (show_plot) { print(p) }
return(invisible(p))
}
devtools::load_all()
# --- Workflow C: Test GitHub Installation ---
# Use this to simulate a new user installing from your public repository.
# It's best to run this in a completely fresh R session.
# remove.packages("TraitGraph") # Ensure no local version is present
# remotes::install_github("Onhech/TraitGraph")
library(TraitGraph)
# -----------------------------------------------------------------------------
# FILE: R/TG_votes.R
# -----------------------------------------------------------------------------
#' Create and Save a Circular Bar Chart for Votes/Opinion Data
#'
#' @param dataset A data frame containing the data to plot.
#' @param column_name The name of the column containing the numeric values to plot.
#' @param title A string for the plot's main title. If not provided, the name
#'   of the `column_name` will be used.
#' @param title_face The font style of the title (e.g., `plain`, `bold`, or `bold.italic`). Defaalts to `bold`.
#' @param color The color of the tile.
#' @param name The name of the column containing unique identifiers. Defaults to "names".
#' @param color The name of the column containing hex color codes. Defaults to "favourite_color".
#' @param sort_order The order to sort the results. Can be "desc" or "asc".
#' @param minor_ticks The number of minor y-axis ticks you want to display. Defaults to none.
#' @param plot_zoom_mod A numeric value to add or subtract from the default outer plot boundary.
#' @param name_size_mod A numeric value to add or subtract from the name label font size.
#' @param name_position_mod A numeric value to modify the vertical position of the individual names.
#' @param title_size_mod A numeric value to add or subtract from the dynamic title font size.
#' @param title_vjust_mod A numeric value to add or subtract from the dynamic title vertical adjustment.
#' @param output_path The full path where the plot will be saved.
#' @param output_width The width of the saved image in inches.
#' @param output_height The height of the saved image in inches.
#' @param output_dpi The resolution (dots per inch) for the saved image.
#' @param save_plot A logical value. If TRUE, the plot is saved to disk.
#' @param show_plot A logical value. If TRUE, the plot is displayed.
#'
#' @return Invisibly returns the ggplot object.
#' @export
TG_votes <- function(dataset,
column_name,
title = NULL,
title_face = "bold",
title_color = "black",
name = "name",
color = "favourite_color",
sort_order = "desc",
minor_ticks = 0,
plot_zoom_mod = 0,
name_size_mod = 0,
name_position_mod = 1,
title_size_mod = 0,
title_vjust_mod = 0,
output_path = "votes_plot.jpg",
output_width = 7,
output_height = 6,
output_dpi = 300,
save_plot = TRUE,
show_plot = TRUE) {
if (is.null(title)) { title <- column_name }
if (!sort_order %in% c("desc", "asc")) { stop("`sort_order` must be either 'desc' or 'asc'.") }
plot_data <- dataset %>%
dplyr::rename(id = !!rlang::sym(name), value = !!rlang::sym(column_name), color = !!rlang::sym(color)) %>%
dplyr::filter(value > 0)
if (sort_order == "desc") {
plot_data <- plot_data %>% dplyr::arrange(dplyr::desc(value))
} else {
plot_data <- plot_data %>% dplyr::arrange(value)
}
plot_data <- plot_data %>%
dplyr::mutate(
id = factor(id, levels = id),
is_light = is_color_light(color),
dark_color = sapply(color, darken_color),
border_color = ifelse(is_light, dark_color, NA_character_)
)
if (nrow(plot_data) == 0) { message("No data with scores greater than 0 to plot."); return(invisible(NULL)) }
max_score <- max(plot_data$value)
title_params <- get_dynamic_title(title)
final_title_size <- title_params$size + title_size_mod
final_title_vjust <- title_params$vjust + title_vjust_mod
column_width <- dplyr::case_when(nrow(plot_data) <= 8 ~ 0.98 - (nrow(plot_data) * 0.01), TRUE ~ 0.90)
final_y_outer_limit <- ((max_score*1.05) * 2.1) + plot_zoom_mod
p <- ggplot2::ggplot(plot_data) +
ggplot2::geom_bar(ggplot2::aes(x = id, y = value, fill = color), width = column_width, stat = "identity", alpha = 0.85, color = ggplot2::alpha(plot_data$border_color, 0.75), size = 0.2) +
ggplot2::geom_hline(yintercept = max_score + 1, color = "black", size = 0.6, alpha = 0.5) +
ggplot2::geom_hline(yintercept = 0, color = "black", size = 0.6, alpha = 0.5) +
ggplot2::geom_hline(yintercept = seq(from = 0, to = max_score, by = (max_score*1.05)/(1 + minor_ticks)), color = "black", size = 0.1, alpha = 0.25, linetype = 'dashed') +
ggplot2::scale_fill_identity() +
ggplot2::scale_y_continuous(limits = c(-0.4 * (max_score*1.05), final_y_outer_limit)) +
ggplot2::theme_void() +
ggplot2::geom_label(ggplot2::aes(x = id, y = pmax(value - (max_score * 0.15), (max_score * 0.1)), label = round(value,0)),
size = 6, fontface = "plain", fill = "white", alpha = 0.99,
color = plot_data$dark_color, label.size = 0.2, show.legend = FALSE) +
ggplot2::geom_text(ggplot2::aes(x = id, y = (max_score * 1.32) * name_position_mod, label = id),
size = 6 + name_size_mod, color = plot_data$dark_color, angle = 0, lineheight = 0.8,
hjust = dplyr::case_when(
plot_data$id == plot_data$id[1] ~ 0.5,
c(FALSE, seq_along(plot_data$id[-1]) == ceiling(length(plot_data$id[-1]) / 2)) ~ 0.5,
seq_along(plot_data$id) <= length(plot_data$id) / 2 ~ 0,
TRUE ~ 1
)) +
ggplot2::theme(
plot.margin = ggplot2::unit(c(-3, -4, -3.5, -4), "cm"),
plot.title = ggplot2::element_text(hjust = 0.5, vjust = final_title_vjust, size = final_title_size, face = title_face, color = title_color)
) +
ggplot2::coord_polar(start = -pi / (nrow(plot_data))) +
ggplot2::ggtitle(title_params$text)
if (save_plot) { ggplot2::ggsave(filename = output_path, plot = p, dpi = output_dpi, width = output_width, height = output_height, units = "in"); message("Plot saved to: ", output_path) }
if (show_plot) { print(p) }
return(invisible(p))
}
devtools::load_all()
# --- Workflow C: Test GitHub Installation ---
# Use this to simulate a new user installing from your public repository.
# It's best to run this in a completely fresh R session.
# remove.packages("TraitGraph") # Ensure no local version is present
# remotes::install_github("Onhech/TraitGraph")
library(TraitGraph)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "Who apologizes even when someone else bumps into them?",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example.jpg',
)
remove.packages("TraitGraph")
devtools::clean_dll()
devtools::document()
devtools::load_all()
devtools::load_all()
remove.packages("TraitGraph")
remove.packages("TraitGraph")
devtools::clean_dll()
devtools::clean_dll()
devtools::document()
rm(list = c("TG_votes"))
remove.packages("TraitGraph")
devtools::clean_dll()
devtools::document()
devtools::load_all()
setwd('/Users/lyndenjensen/Library/CloudStorage/GoogleDrive-lynden.jensen@gmail.com/My Drive/Work/PsychologyReports/Product/Reports/TraitGraph')
# Create a directory for example plots if it doesn't already exist
if (!dir.exists("ExamplePlots")) {
dir.create("ExamplePlots")
}
devtools::load_all()
# --- Workflow C: Test GitHub Installation ---
# Use this to simulate a new user installing from your public repository.
# It's best to run this in a completely fresh R session.
# remove.packages("TraitGraph") # Ensure no local version is present
# remotes::install_github("Onhech/TraitGraph")
library(TraitGraph)
# --- 3. CREATE SAMPLE DATA ---
# Create one master sample data frame for testing.
set.seed(42) # for reproducibility
sample_data <- tibble::tribble(
~name,    ~favourite_color, ~HonestyHumility, ~Emotionality, ~Extroversion, ~Agreeableness, ~Conscientiousness, ~Openness,
"Alice Frank",   "#FF6B6B",         75,               40,            80,            85,             90,                 70,
"Bob Steward",     "#4ECDC4",         80,               45,            75,            90,             85,                 65,
"Frank Bobby",   "#45B7D1",         70,               50,            85,            80,             95,                 75,
"Eve Twingle",     "#F7B801",         85,               70,            75,            80,             40,                 95,
"Grace Hunter",   "#FAD390",         90,               65,            80,            75,             35,                 90,
"Heidi Probosky",   "#FF8C61",         80,               75,            70,            85,             45,                 85,
"Charlie Kane", "#3D5A80",         40,               80,            30,            50,             60,                 45,
"David Turner Salvadora III",   "#98C1D9",         45,               75,            35,            55,             65,                 50,
"Ivan Evans",    "#E0FBFC",         35,               85,            25,            45,             55,                 40,
"Judy Perch",    "#293241",         50,               70,            40,            60,             70,                 55
) %>%
dplyr::mutate(rankedQ_1 = sample(0:10, 10, replace = TRUE))
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "Who apologizes even when someone else bumps into them?",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example.jpg',
)
set.seed(42) # for reproducibility
sample_data <- tibble::tribble(
~name,    ~favourite_color, ~HonestyHumility, ~Emotionality, ~Extroversion, ~Agreeableness, ~Conscientiousness, ~Openness,
"Alice Frank",   "#FF6B6B",         75,               40,            80,            85,             90,                 70,
"Bob Steward",     "#4ECDC4",         80,               45,            75,            90,             85,                 65,
"Frank Bobby",   "#45B7D1",         70,               50,            85,            80,             95,                 75,
"Eve Twingle",     "#F7B801",         85,               70,            75,            80,             40,                 95,
"Grace Hunter",   "#FAD390",         90,               65,            80,            75,             35,                 90,
"Heidi Probosky",   "#FF8C61",         80,               75,            70,            85,             45,                 85,
"Charlie Kane", "#3D5A80",         40,               80,            30,            50,             60,                 45,
"David Turner Salvadora III",   "#98C1D9",         45,               75,            35,            55,             65,                 50,
"Ivan Evans",    "#E0FBFC",         35,               85,            25,            45,             55,                 40,
"Judy Perch",    "#293241",         50,               70,            40,            60,             70,                 55
) %>%
dplyr::mutate(rankedQ_1 = sample(0:100, 10, replace = TRUE))
# --- 4. FUNCTION TESTING ---
# After running `devtools::load_all()`, you can run these calls to test.
# --- Trait Example ---
TG_trait(
dataset = sample_data,
column_name = "Extroversion",
save_plot = T,
output_path = 'ExamplePlots/trait_graph_example.jpg'
)
# --- Voting Question Example ---
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "Who apologizes even when someone else bumps into them?",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example.jpg',
)
devtools::load_all()
# --- Workflow C: Test GitHub Installation ---
# Use this to simulate a new user installing from your public repository.
# It's best to run this in a completely fresh R session.
# remove.packages("TraitGraph") # Ensure no local version is present
# remotes::install_github("Onhech/TraitGraph")
library(TraitGraph)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "Who apologizes even when someone else bumps into them?",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example.jpg',
)
devtools::load_all()
# --- Workflow C: Test GitHub Installation ---
# Use this to simulate a new user installing from your public repository.
# It's best to run this in a completely fresh R session.
# remove.packages("TraitGraph") # Ensure no local version is present
# remotes::install_github("Onhech/TraitGraph")
library(TraitGraph)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "Who apologizes even when someone else bumps into them?",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example.jpg',
)
devtools::load_all()
# --- Workflow C: Test GitHub Installation ---
# Use this to simulate a new user installing from your public repository.
# It's best to run this in a completely fresh R session.
# remove.packages("TraitGraph") # Ensure no local version is present
# remotes::install_github("Onhech/TraitGraph")
library(TraitGraph)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "Who apologizes even when someone else bumps into them?",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example.jpg',
)
remove.packages("TraitGraph")
devtools::clean_dll()
devtools::document()
devtools::load_all()
devtools::install()
library(TraitGraph)
# -----------------------------------------------------------------------------
# TraitGraph Package - Development & Testing Script
# -----------------------------------------------------------------------------
# This script is for managing, rebuilding, and testing the TraitGraph package.
# It is not part of the package itself but a helper for the developer.
# -----------------------------------------------------------------------------
# --- 1. SETUP ---
# Load devtools for package management
# install.packages("devtools") # Run once if not installed
library(devtools)
library(tidyverse)
# Set the working directory to the package's root folder.
# IMPORTANT: This needs to be the correct path on your machine.
# Using RStudio Projects (the .Rproj file) is the best way to manage this
# automatically and avoid hardcoding the path.
setwd('/Users/lyndenjensen/Library/CloudStorage/GoogleDrive-lynden.jensen@gmail.com/My Drive/Work/PsychologyReports/Product/Reports/TraitGraph')
# Create a directory for example plots if it doesn't already exist
if (!dir.exists("ExamplePlots")) {
dir.create("ExamplePlots")
}
devtools::load_all()
# --- Workflow C: Test GitHub Installation ---
# Use this to simulate a new user installing from your public repository.
# It's best to run this in a completely fresh R session.
# remove.packages("TraitGraph") # Ensure no local version is present
# remotes::install_github("Onhech/TraitGraph")
library(TraitGraph)
# --- 3. CREATE SAMPLE DATA ---
# Create one master sample data frame for testing.
set.seed(42) # for reproducibility
sample_data <- tibble::tribble(
~name,    ~favourite_color, ~HonestyHumility, ~Emotionality, ~Extroversion, ~Agreeableness, ~Conscientiousness, ~Openness,
"Alice Frank",   "#FF6B6B",         75,               40,            80,            85,             90,                 70,
"Bob Steward",     "#4ECDC4",         80,               45,            75,            90,             85,                 65,
"Frank Bobby",   "#45B7D1",         70,               50,            85,            80,             95,                 75,
"Eve Twingle",     "#F7B801",         85,               70,            75,            80,             40,                 95,
"Grace Hunter",   "#FAD390",         90,               65,            80,            75,             35,                 90,
"Heidi Probosky",   "#FF8C61",         80,               75,            70,            85,             45,                 85,
"Charlie Kane", "#3D5A80",         40,               80,            30,            50,             60,                 45,
"David Turner Salvadora III",   "#98C1D9",         45,               75,            35,            55,             65,                 50,
"Ivan Evans",    "#E0FBFC",         35,               85,            25,            45,             55,                 40,
"Judy Perch",    "#293241",         50,               70,            40,            60,             70,                 55
) %>%
dplyr::mutate(rankedQ_1 = sample(0:100, 10, replace = TRUE))
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "Who apologizes even when someone else bumps into them?",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example.jpg',
)
devtools::load_all()
# --- Workflow C: Test GitHub Installation ---
# Use this to simulate a new user installing from your public repository.
# It's best to run this in a completely fresh R session.
# remove.packages("TraitGraph") # Ensure no local version is present
# remotes::install_github("Onhech/TraitGraph")
library(TraitGraph)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "Who apologizes even when someone else bumps into them?",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example.jpg',
)
devtools::load_all()
# --- Workflow C: Test GitHub Installation ---
# Use this to simulate a new user installing from your public repository.
# It's best to run this in a completely fresh R session.
# remove.packages("TraitGraph") # Ensure no local version is present
# remotes::install_github("Onhech/TraitGraph")
library(TraitGraph)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "Who apologizes even when someone else bumps into them?",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example.jpg',
)
devtools::load_all()
# --- Workflow C: Test GitHub Installation ---
# Use this to simulate a new user installing from your public repository.
# It's best to run this in a completely fresh R session.
# remove.packages("TraitGraph") # Ensure no local version is present
# remotes::install_github("Onhech/TraitGraph")
library(TraitGraph)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "Who apologizes even when someone else bumps into them?",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example.jpg',
)
devtools::load_all()
# --- Workflow C: Test GitHub Installation ---
# Use this to simulate a new user installing from your public repository.
# It's best to run this in a completely fresh R session.
# remove.packages("TraitGraph") # Ensure no local version is present
# remotes::install_github("Onhech/TraitGraph")
library(TraitGraph)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "Who apologizes even when someone else bumps into them?",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example.jpg',
)
# -----------------------------------------------------------------------------
# TraitGraph Package - Development & Testing Script
# -----------------------------------------------------------------------------
# This script is for managing, rebuilding, and testing the TraitGraph package.
# It is not part of the package itself but a helper for the developer.
# -----------------------------------------------------------------------------
# --- 1. SETUP ---
# Load devtools for package management
# install.packages("devtools") # Run once if not installed
library(devtools)
library(tidyverse)
# Set the working directory to the package's root folder.
# IMPORTANT: This needs to be the correct path on your machine.
# Using RStudio Projects (the .Rproj file) is the best way to manage this
# automatically and avoid hardcoding the path.
setwd('/Users/lyndenjensen/Library/CloudStorage/GoogleDrive-lynden.jensen@gmail.com/My Drive/Work/PsychologyReports/Product/Reports/TraitGraph')
# Create a directory for example plots if it doesn't already exist
if (!dir.exists("ExamplePlots")) {
dir.create("ExamplePlots")
}
remove.packages("TraitGraph")
devtools::clean_dll()
devtools::document()
devtools::load_all()
devtools::install()           # Build and install the package locally
# install.packages("devtools") # Run once if not installed
library(devtools)
library(tidyverse)
# Set the working directory to the package's root folder.
# IMPORTANT: This needs to be the correct path on your machine.
# Using RStudio Projects (the .Rproj file) is the best way to manage this
# automatically and avoid hardcoding the path.
setwd('/Users/lyndenjensen/Library/CloudStorage/GoogleDrive-lynden.jensen@gmail.com/My Drive/Work/PsychologyReports/Product/Reports/TraitGraph')
# Create a directory for example plots if it doesn't already exist
if (!dir.exists("ExamplePlots")) {
dir.create("ExamplePlots")
}
remove.packages("TraitGraph")
devtools::load_all()
# Create one master sample data frame for testing.
set.seed(42) # for reproducibility
sample_data <- tibble::tribble(
~name,    ~favourite_color, ~HonestyHumility, ~Emotionality, ~Extroversion, ~Agreeableness, ~Conscientiousness, ~Openness,
"Alice Frank",   "#FF6B6B",         75,               40,            80,            85,             90,                 70,
"Bob Steward",     "#4ECDC4",         80,               45,            75,            90,             85,                 65,
"Frank Bobby",   "#45B7D1",         70,               50,            85,            80,             95,                 75,
"Eve Twingle",     "#F7B801",         85,               70,            75,            80,             40,                 95,
"Grace Hunter",   "#FAD390",         90,               65,            80,            75,             35,                 90,
"Heidi Probosky",   "#FF8C61",         80,               75,            70,            85,             45,                 85,
"Charlie Kane", "#3D5A80",         40,               80,            30,            50,             60,                 45,
"David Turner Salvadora III",   "#98C1D9",         45,               75,            35,            55,             65,                 50,
"Ivan Evans",    "#E0FBFC",         35,               85,            25,            45,             55,                 40,
"Judy Perch",    "#293241",         50,               70,            40,            60,             70,                 55
) %>%
dplyr::mutate(rankedQ_1 = sample(0:100, 10, replace = TRUE))
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "Who apologizes even when someone else bumps into them?",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example.jpg',
)
library(TraitGraph)
devtools::install()           # Build and install the package locally
library(TraitGraph)
library(TraitGraph)            # Load the newly installed package
devtools::install()
library(devtools)
library(tidyverse)
# Set the working directory to the package's root folder.
# IMPORTANT: This needs to be the correct path on your machine.
# Using RStudio Projects (the .Rproj file) is the best way to manage this
# automatically and avoid hardcoding the path.
setwd('/Users/lyndenjensen/Library/CloudStorage/GoogleDrive-lynden.jensen@gmail.com/My Drive/Work/PsychologyReports/Product/Reports/TraitGraph')
# Create a directory for example plots if it doesn't already exist
if (!dir.exists("ExamplePlots")) {
dir.create("ExamplePlots")
}
remove.packages("TraitGraph")
devtools::clean_dll()
devtools::document()
devtools::document()
devtools::load_all()
devtools::install()
library(TraitGraph)
devtools::load_all()
library(TraitGraph)
set.seed(42) # for reproducibility
sample_data <- tibble::tribble(
~name,    ~favourite_color, ~HonestyHumility, ~Emotionality, ~Extroversion, ~Agreeableness, ~Conscientiousness, ~Openness,
"Alice Frank",   "#FF6B6B",         75,               40,            80,            85,             90,                 70,
"Bob Steward",     "#4ECDC4",         80,               45,            75,            90,             85,                 65,
"Frank Bobby",   "#45B7D1",         70,               50,            85,            80,             95,                 75,
"Eve Twingle",     "#F7B801",         85,               70,            75,            80,             40,                 95,
"Grace Hunter",   "#FAD390",         90,               65,            80,            75,             35,                 90,
"Heidi Probosky",   "#FF8C61",         80,               75,            70,            85,             45,                 85,
"Charlie Kane", "#3D5A80",         40,               80,            30,            50,             60,                 45,
"David Turner Salvadora III",   "#98C1D9",         45,               75,            35,            55,             65,                 50,
"Ivan Evans",    "#E0FBFC",         35,               85,            25,            45,             55,                 40,
"Judy Perch",    "#293241",         50,               70,            40,            60,             70,                 55
) %>%
dplyr::mutate(rankedQ_1 = sample(0:100, 10, replace = TRUE))
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "Who apologizes even when someone else bumps into them?",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example.jpg',
)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "Who apologizes even when someone else bumps into them?",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example.jpg',name_size_mod = 1.5
)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "Who apologizes even when someone else bumps into them?",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example.jpg',title_size_mod = 1.5
)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "Who apologizes even when someone else bumps into them?",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example.jpg',title_size_mod = 1.6
)
remove.packages("TraitGraph")
devtools::clean_dll()
devtools::document()
devtools::load_all()
devtools::install()
library(TraitGraph)
