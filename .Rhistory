title = "1234 6789 1234 6789 1234.",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example_25.jpg',title_size_mod = 1.6
)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "1234 6789 1234 6789 1234 6789.",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example_30.jpg',title_size_mod = 1.6
)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "1234 6789 1234 6789 1234 6789 1234.",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example_35.jpg',title_size_mod = 1.6
)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "1234 6789 1234 6789 1234 6789 1234 6789.",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example_40.jpg',title_size_mod = 1.6
)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "1234 6789 1234 6789 1234 6789 1234 6789 1234.",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example_45.jpg',title_size_mod = 1.6
)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "1234 6789 1234 6789 1234 6789 1234 6789 1234 6789.",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example_50.jpg',title_size_mod = 1.6
)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234.",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example_55.jpg',title_size_mod = 1.6
)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789.",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example_60.jpg',title_size_mod = 1.6
)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234.",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example_65.jpg',title_size_mod = 1.6
)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789  1234 6789",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example_70.jpg',title_size_mod = 1.6
)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789  1234 6789 1234",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example_75.jpg',title_size_mod = 1.6
)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789  1234 6789 1234 6789",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example_80.jpg',title_size_mod = 1.6
)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789  1234 6789 1234 6789 1234",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example_85.jpg',title_size_mod = 1.6
)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789  1234 6789 1234 6789",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example_90.jpg',title_size_mod = 1.6
)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789  1234 6789 1234 6789 1234",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example_95.jpg',title_size_mod = 1.6
)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789  1234 6789 1234 6789",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example_100.jpg',title_size_mod = 1.6
)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789  1234 6789 1234 6789",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example_110.jpg',title_size_mod = 1.6
)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789  1234 6789 1234 6789",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example_120.jpg',title_size_mod = 1.6
)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789  1234 6789 1234 6789",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example_130.jpg',title_size_mod = 1.6
)
TG_votes(
dataset = sample_data,
column_name = "rankedQ_1",
title = "1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789 1234 6789  1234 6789 1234 6789 1234",
save_plot = T,
output_path = 'ExamplePlots/voting_graph_example_135.jpg',title_size_mod = 1.6
)
devtools::document()
devtools::load_all()
# --- Workflow C: Test GitHub Installation ---
# Use this to simulate a new user installing from your public repository.
# It's best to run this in a completely fresh R session.
# remove.packages("TraitGraph") # Ensure no local version is present
# remotes::install_github("Onhech/TraitGraph")
library(TraitGraph)
# --- 3. CREATE SAMPLE DATA ---
# Create one master sample data frame for testing.
set.seed(42) # for reproducibility
sample_data <- tibble::tribble(
~name,    ~favourite_color, ~HonestyHumility, ~Emotionality, ~Extroversion, ~Agreeableness, ~Conscientiousness, ~Openness,
"Alice Frank",   "#FF6B6B",         75,               40,            80,            85,             90,                 70,
"Bob Steward",     "#4ECDC4",         80,               45,            75,            90,             85,                 65,
"Frank Bobby",   "#45B7D1",         70,               50,            85,            80,             95,                 75,
"Eve Twingle",     "#F7B801",         85,               70,            75,            80,             40,                 95,
"Grace Hunter",   "#FAD390",         90,               65,            80,            75,             35,                 90,
"Heidi Probosky",   "#FF8C61",         80,               75,            70,            85,             45,                 85,
"Charlie Kane", "#3D5A80",         40,               80,            30,            50,             60,                 45,
"David Turner Salvadora III",   "#98C1D9",         45,               75,            35,            55,             65,                 50,
"Ivan Evans",    "#E0FBFC",         35,               85,            25,            45,             55,                 40,
"Judy Perch",    "#293241",         50,               70,            40,            60,             70,                 55
) %>%
dplyr::mutate(rankedQ_1 = sample(0:100, 10, replace = TRUE))
# -----------------------------------------------------------------------------
# TraitGraph Package - Development & Testing Script
# -----------------------------------------------------------------------------
# This script is for managing, rebuilding, and testing the TraitGraph package.
# It is not part of the package itself but a helper for the developer.
# -----------------------------------------------------------------------------
# --- 1. SETUP ---
# Load devtools for package management
# install.packages("devtools") # Run once if not installed
library(devtools)
library(tidyverse)
# Set the working directory to the package's root folder.
# IMPORTANT: This needs to be the correct path on your machine.
# Using RStudio Projects (the .Rproj file) is the best way to manage this
# automatically and avoid hardcoding the path.
setwd('/Users/lyndenjensen/Library/CloudStorage/GoogleDrive-lynden.jensen@gmail.com/My Drive/Work/PsychologyReports/Product/Reports/TraitGraph')
# Create a directory for example plots if it doesn't already exist
if (!dir.exists("ExamplePlots")) {
dir.create("ExamplePlots")
}
remove.packages("TraitGraph")
devtools::clean_dll()
devtools::document()
devtools::load_all()
devtools::install()           # Build and install the package locally
remove.packages("TraitGraph")
devtools::clean_dll()
devtools::document()
remove.packages("TraitGraph")
devtools::clean_dll()
devtools::document()
# -----------------------------------------------------------------------------
# TraitGraph Package - Development & Testing Script
# -----------------------------------------------------------------------------
# This script is for managing, rebuilding, and testing the TraitGraph package.
# It is not part of the package itself but a helper for the developer.
# -----------------------------------------------------------------------------
# --- 1. SETUP ---
# Load devtools for package management
# install.packages("devtools") # Run once if not installed
library(devtools)
library(tidyverse)
# Set the working directory to the package's root folder.
# IMPORTANT: This needs to be the correct path on your machine.
# Using RStudio Projects (the .Rproj file) is the best way to manage this
# automatically and avoid hardcoding the path.
setwd('/Users/lyndenjensen/Library/CloudStorage/GoogleDrive-lynden.jensen@gmail.com/My Drive/Work/PsychologyReports/Product/Reports/TraitGraph')
# Create a directory for example plots if it doesn't already exist
if (!dir.exists("ExamplePlots")) {
dir.create("ExamplePlots")
}
remove.packages("TraitGraph")
devtools::clean_dll()
devtools::document()
devtools::load_all()
# -----------------------------------------------------------------------------
# TraitGraph Package - Development & Testing Script
# -----------------------------------------------------------------------------
# This script is for managing, rebuilding, and testing the TraitGraph package.
# It is not part of the package itself but a helper for the developer.
# -----------------------------------------------------------------------------
# --- 1. SETUP ---
# Load devtools for package management
# install.packages("devtools") # Run once if not installed
library(devtools)
library(tidyverse)
# Set the working directory to the package's root folder.
# IMPORTANT: This needs to be the correct path on your machine.
# Using RStudio Projects (the .Rproj file) is the best way to manage this
# automatically and avoid hardcoding the path.
setwd('/Users/lyndenjensen/Library/CloudStorage/GoogleDrive-lynden.jensen@gmail.com/My Drive/Work/PsychologyReports/Product/Reports/TraitGraph')
# Create a directory for example plots if it doesn't already exist
if (!dir.exists("ExamplePlots")) {
dir.create("ExamplePlots")
}
remove.packages("TraitGraph")
devtools::clean_dll()
devtools::document()
devtools::load_all()
devtools::install()
library(TraitGraph)
set.seed(42) # for reproducibility
sample_data <- tibble::tribble(
~name,    ~favourite_color, ~HonestyHumility, ~Emotionality, ~Extroversion, ~Agreeableness, ~Conscientiousness, ~Openness,
"Alice Frank",   "#FF6B6B",         75,               40,            80,            85,             90,                 70,
"Bob Steward",     "#4ECDC4",         80,               45,            75,            90,             85,                 65,
"Frank Bobby",   "#45B7D1",         70,               50,            85,            80,             95,                 75,
"Eve Twingle",     "#F7B801",         85,               70,            75,            80,             40,                 95,
"Grace Hunter",   "#FAD390",         90,               65,            80,            75,             35,                 90,
"Heidi Probosky",   "#FF8C61",         80,               75,            70,            85,             45,                 85,
"Charlie Kane", "#3D5A80",         40,               80,            30,            50,             60,                 45,
"David Turner Salvadora III",   "#98C1D9",         45,               75,            35,            55,             65,                 50,
"Ivan Evans",    "#E0FBFC",         35,               85,            25,            45,             55,                 40,
"Judy Perch",    "#293241",         50,               70,            40,            60,             70,                 55
) %>%
dplyr::mutate(rankedQ_1 = sample(0:100, 10, replace = TRUE))
TraitGraph::TG_votes(dataset = data,
column_name = "Q_CQ_1",
title = "If your haircut looked genuinely awful, who would tell you the truth?",
color = "favourite_color",
save_plot = TRUE, show_plot = T,
minor_ticks = 3,
output_path = "Data/vote_CQ_HEX_Hon_plot.jpg")
TG_votes(dataset = data,
column_name = "Q_CQ_1",
title = "If your haircut looked genuinely awful, who would tell you the truth?",
color = "favourite_color",
save_plot = TRUE, show_plot = T,
minor_ticks = 3,
output_path = "Data/vote_CQ_HEX_Hon_plot.jpg")
TG_votes(dataset = data,
column_name = "rankedQ_1",
title = "If your haircut looked genuinely awful, who would tell you the truth?",
color = "favourite_color",
save_plot = TRUE, show_plot = T,
minor_ticks = 3,
output_path = "Data/vote_CQ_HEX_Hon_plot.jpg")
TG_votes(dataset = data,
column_name = "rankedQ_1",
title = "If your haircut looked genuinely awful, who would tell you the truth?",
color = "favourite_color",
save_plot = TRUE, show_plot = T,
minor_ticks = 3,
output_path = "Data/vote_CQ_HEX_Hon_plot.jpg")
TG_votes(dataset = sample_data,
column_name = "rankedQ_1",
title = "If your haircut looked genuinely awful, who would tell you the truth?",
color = "favourite_color",
save_plot = TRUE, show_plot = T,
minor_ticks = 3,
output_path = "Data/vote_CQ_HEX_Hon_plot.jpg")
TG_votes(dataset = sample_data,
column_name = "rankedQ_1",
title = "If your haircut looked genuinely awful, who would tell you the truth?",
color = "favourite_color",
save_plot = TRUE, show_plot = T,
minor_ticks = 3,
output_path = "vote_CQ_HEX_Hon_plot.jpg")
set.seed(42) # for reproducibility
sample_data <- tibble::tribble(
~name,    ~favourite_color, ~HonestyHumility, ~Emotionality, ~Extroversion, ~Agreeableness, ~Conscientiousness, ~Openness,
"Alice Frank",   "#FF6B6B",         75,               40,            80,            85,             90,                 70,
"Bob Steward",     "#4ECDC4",         80,               45,            75,            90,             85,                 65,
"Frank Bobby",   "#45B7D1",         70,               50,            85,            80,             95,                 75,
"Eve Twingle",     "#F7B801",         85,               70,            75,            80,             40,                 95,
"Grace Hunter",   "#FAD390",         90,               65,            80,            75,             35,                 90,
"Heidi Probosky",   "#FF8C61",         80,               75,            70,            85,             45,                 85,
"Charlie Kane", "#3D5A80",         40,               80,            30,            50,             60,                 45,
"David Turner Salvadora III",   "#98C1D9",         45,               75,            35,            55,             65,                 50,
"Ivan Evans",    "#E0FBFC",         35,               85,            25,            45,             55,                 40,
"Judy Perch",    "#293241",         50,               70,            40,            60,             70,                 55
) %>%
dplyr::mutate(rankedQ_1 = sample(0:80, 10, replace = TRUE))
TG_votes(dataset = sample_data,
column_name = "rankedQ_1",
title = "If your haircut looked genuinely awful, who would tell you the truth?",
color = "favourite_color",
save_plot = TRUE, show_plot = T,
minor_ticks = 3,
output_path = "vote_CQ_HEX_Hon_plot.jpg")
# install.packages("devtools") # Run once if not installed
library(devtools)
library(tidyverse)
# Set the working directory to the package's root folder.
# IMPORTANT: This needs to be the correct path on your machine.
# Using RStudio Projects (the .Rproj file) is the best way to manage this
# automatically and avoid hardcoding the path.
setwd('/Users/lyndenjensen/Library/CloudStorage/GoogleDrive-lynden.jensen@gmail.com/My Drive/Work/PsychologyReports/Product/Reports/TraitGraph')
# Create a directory for example plots if it doesn't already exist
if (!dir.exists("ExamplePlots")) {
dir.create("ExamplePlots")
}
remove.packages("TraitGraph")
devtools::clean_dll()
devtools::document()
devtools::load_all()
devtools::install()
install.packages(c("abind", "admisc", "arm", "backports", "bayestestR", "BH", "bit", "bit64", "boot", "broom", "broom.helpers", "cAIC4", "car", "checkmate", "class", "classInt", "clue", "cluster", "codetools", "collections", "commonmark", "corrplot", "cowplot", "crosstalk", "curl", "CVXR", "data.table", "datawizard", "DBI", "dbplyr", "dendextend", "DEoptimR", "Deriv", "diffobj", "doBy", "dtplyr", "dtt", "e1071", "EFAtools", "effectsize", "EGAnet", "emmeans", "eRm", "esem", "estimability", "evaluate", "fastDummies", "fdrtool", "foreign", "future", "future.apply", "gargle", "gdtools", "gert", "GGally", "ggdist", "ggeffects", "ggpattern", "ggplot2", "ggpubr", "ggraph", "ggstats", "gh", "glmnet", "globals", "gmp", "googledrive", "googlesheets4", "GPArotation", "gridGeometry", "gridpattern", "gutenbergr", "haven", "Hmisc", "htmlTable", "httpuv", "httr2", "insight", "jpeg", "KernSmooth", "labelled", "later", "lattice", "lme4", "lsmeans", "lubridate", "MatrixModels", "MBESS", "MCMCpack", "memisc", "mgcv", "mi", "mice", "miniUI", "minqa", "mirt", "MplusAutomation", "mvtnorm", "network", "nlme", "nloptr", "NLP", "nnet", "openssl", "openxlsx", "ordinal", "pander", "parallelly", "parameters", "paran", "patchwork", "pbapply", "pbkrtest", "performance", "permute", "pkgbuild", "pkgdown", "plotly", "processx", "promises", "ps", "psych", "psychTools", "purrr", "qdapRegex", "quantreg", "R.oo", "R.utils", "ragg", "RcmdrMisc", "RcppArmadillo", "RcppEigen", "RcppParallel", "Rcsdp", "RCurl", "readstata13", "readxl", "renv", "report", "reprex", "reshape", "Rmpfr", "Rnest", "robustbase", "roxygen2", "rpart", "rpf", "rprojroot", "RSpectra", "RUnit", "rvest", "s2", "sandwich", "scs", "sem", "semPlot", "semTools", "sessioninfo", "sf", "shape", "shiny", "SimDesign", "sjmisc", "sjPlot", "sjstats", "slam", "sna", "SparseM", "spatial", "StanHeaders", "statnet.common", "stringr", "survival", "testthat", "texreg", "textdata", "textshape", "textshaping", "tidytext", "timechange", "tzdb", "ucminf", "units", "urltools", "usethis", "uuid", "vegan", "visNetwork", "waldo", "xfun", "XML", "xml2", "zip", "zoo"))
install.packages(c("bayestestR", "boot", "broom", "cards", "checkmate", "collections", "crosstalk", "curl", "datawizard", "dbplyr", "dendextend", "DEoptimR", "dtplyr", "EFAtools", "emmeans", "evaluate", "future", "future.apply", "gargle", "gdtools", "GGally", "ggeffects", "ggpattern", "ggplot2", "ggraph", "glmnet", "globals", "googledrive", "googlesheets4", "httr2", "insight", "later", "MBESS", "mgcv", "mi", "mirt", "MplusAutomation", "parallelly", "parameters", "patchwork", "pbapply", "pbkrtest", "performance", "purrr", "ragg", "RcmdrMisc", "RcppArmadillo", "RcppParallel", "Rcsdp", "renv", "Rmpfr", "robustbase", "roxygen2", "rprojroot", "rvest", "semPlot", "SimDesign", "sjmisc", "sjPlot", "stringr", "textshaping", "tidytext", "usethis", "visNetwork", "waldo", "xfun", "XML", "xml2"))
install.packages(c("bayestestR", "boot", "broom", "cards", "checkmate", "collections", "crosstalk", "curl", "datawizard", "dbplyr", "dendextend", "DEoptimR", "dtplyr", "EFAtools", "emmeans", "evaluate", "future", "future.apply", "gargle", "gdtools", "GGally", "ggeffects", "ggpattern", "ggplot2", "ggraph", "glmnet", "globals", "googledrive", "googlesheets4", "httr2", "insight", "later", "MBESS", "mgcv", "mi", "mirt", "MplusAutomation", "parallelly", "parameters", "patchwork", "pbapply", "pbkrtest", "performance", "purrr", "ragg", "RcmdrMisc", "RcppArmadillo", "RcppParallel", "Rcsdp", "renv", "Rmpfr", "robustbase", "roxygen2", "rprojroot", "rvest", "semPlot", "SimDesign", "sjmisc", "sjPlot", "stringr", "textshaping", "tidytext", "usethis", "visNetwork", "waldo", "xfun", "XML", "xml2"))
install.packages(c("bayestestR", "boot", "broom", "cards", "checkmate", "collections", "crosstalk", "curl", "datawizard", "dbplyr", "dendextend", "DEoptimR", "dtplyr", "EFAtools", "emmeans", "evaluate", "future", "future.apply", "gargle", "gdtools", "GGally", "ggeffects", "ggpattern", "ggplot2", "ggraph", "glmnet", "globals", "googledrive", "googlesheets4", "httr2", "insight", "later", "MBESS", "mgcv", "mi", "mirt", "MplusAutomation", "parallelly", "parameters", "patchwork", "pbapply", "pbkrtest", "performance", "purrr", "ragg", "RcmdrMisc", "RcppArmadillo", "RcppParallel", "Rcsdp", "renv", "Rmpfr", "robustbase", "roxygen2", "rprojroot", "rvest", "semPlot", "SimDesign", "sjmisc", "sjPlot", "stringr", "textshaping", "tidytext", "usethis", "visNetwork", "waldo", "xfun", "XML", "xml2"))
remove.packages("TraitGraph")
devtools::clean_dll()
devtools::document()
devtools::load_all()
library(TraitGraph)
remove.packages("TraitGraph")
# -----------------------------------------------------------------------------
# TraitGraph Package - Development & Testing Script
# -----------------------------------------------------------------------------
# This script is for managing, rebuilding, and testing the TraitGraph package.
# It is not part of the package itself but a helper for the developer.
# -----------------------------------------------------------------------------
# --- 1. SETUP ---
# Load devtools for package management
# install.packages("devtools") # Run once if not installed
library(devtools)
library(tidyverse)
# Set the working directory to the package's root folder.
# IMPORTANT: This needs to be the correct path on your machine.
# Using RStudio Projects (the .Rproj file) is the best way to manage this
# automatically and avoid hardcoding the path.
setwd('/Users/lyndenjensen/Library/CloudStorage/GoogleDrive-lynden.jensen@gmail.com/My Drive/Work/PsychologyReports/Product/Reports/TraitGraph')
# Create a directory for example plots if it doesn't already exist
if (!dir.exists("ExamplePlots")) {
dir.create("ExamplePlots")
}
# --- 2. PACKAGE WORKFLOWS ---
# --- Workflow A: Full Rebuild and Install ---
# Use this workflow occasionally, especially before pushing to GitHub, to ensure
# the complete package builds correctly from start to finish.
remove.packages("TraitGraph")
devtools::clean_dll()
devtools::document()
devtools::clean_dll()
devtools::document()
library(devtools)
library(tidyverse)
setwd('/Users/lyndenjensen/Library/CloudStorage/GoogleDrive-lynden.jensen@gmail.com/My Drive/Work/PsychologyReports/Product/Reports/TraitGraph')
devtools::document()
library(devtools)
library(tidyverse)
# Set the working directory to the package's root folder.
# IMPORTANT: This needs to be the correct path on your machine.
# Using RStudio Projects (the .Rproj file) is the best way to manage this
# automatically and avoid hardcoding the path.
setwd('/Users/lyndenjensen/Library/CloudStorage/GoogleDrive-lynden.jensen@gmail.com/My Drive/Work/PsychologyReports/Product/Reports/TraitGraph')
# Create a directory for example plots if it doesn't already exist
if (!dir.exists("ExamplePlots")) {
dir.create("ExamplePlots")
}
remove.packages("TraitGraph")
devtools::clean_dll()
devtools::document()
# -----------------------------------------------------------------------------
# TraitGraph Package - Development & Testing Script
# -----------------------------------------------------------------------------
# This script is for managing, rebuilding, and testing the TraitGraph package.
# It is not part of the package itself but a helper for the developer.
# -----------------------------------------------------------------------------
# --- 1. SETUP ---
# Load devtools for package management
# install.packages("devtools") # Run once if not installed
library(devtools)
library(tidyverse)
# Set the working directory to the package's root folder.
# IMPORTANT: This needs to be the correct path on your machine.
# Using RStudio Projects (the .Rproj file) is the best way to manage this
# automatically and avoid hardcoding the path.
setwd('/Users/lyndenjensen/Library/CloudStorage/GoogleDrive-lynden.jensen@gmail.com/My Drive/Work/PsychologyReports/Product/Reports/TraitGraph')
# Create a directory for example plots if it doesn't already exist
if (!dir.exists("ExamplePlots")) {
dir.create("ExamplePlots")
}
devtools::load_all()
# --- Workflow C: Test GitHub Installation ---
# Use this to simulate a new user installing from your public repository.
# It's best to run this in a completely fresh R session.
# remove.packages("TraitGraph") # Ensure no local version is present
# remotes::install_github("Onhech/TraitGraph")
library(TraitGraph)
# Create one master sample data frame for testing.
set.seed(42) # for reproducibility
sample_data <- tibble::tribble(
~name,    ~favourite_color, ~HonestyHumility, ~Emotionality, ~Extroversion, ~Agreeableness, ~Conscientiousness, ~Openness,
"Alice Frank",   "#FF6B6B",         75,               40,            80,            85,             90,                 70,
"Bob Steward",     "#4ECDC4",         80,               45,            75,            90,             85,                 65,
"Frank Bobby",   "#45B7D1",         70,               50,            85,            80,             95,                 75,
"Eve Twingle",     "#F7B801",         85,               70,            75,            80,             40,                 95,
"Grace Hunter",   "#FAD390",         90,               65,            80,            75,             35,                 90,
"Heidi Probosky",   "#FF8C61",         80,               75,            70,            85,             45,                 85,
"Charlie Kane", "#3D5A80",         40,               80,            30,            50,             60,                 45,
"David Turner Salvadora III",   "#98C1D9",         45,               75,            35,            55,             65,                 50,
"Ivan Evans",    "#E0FBFC",         35,               85,            25,            45,             55,                 40,
"Judy Perch",    "#293241",         50,               70,            40,            60,             70,                 55
) %>%
dplyr::mutate(rankedQ_1 = sample(0:80, 10, replace = TRUE))
similarity_columns <- c("HonestyHumility", "Emotionality", "Extroversion", "Agreeableness","Conscientiousness", "Openness")
TG_similarity(
dataset = sample_data[1:8,],
connection_threshold = .5,
columns = similarity_columns,
name = "name",
use_initials = T, # Use full names for clarity
save_plot = T,
output_path = 'ExamplePlots/similarity_graph_example.png',
zoom_out_factor = 1.2
)
devtools::load_all()
Q
devtools::load_all()
# --- Workflow C: Test GitHub Installation ---
# Use this to simulate a new user installing from your public repository.
# It's best to run this in a completely fresh R session.
# remove.packages("TraitGraph") # Ensure no local version is present
# remotes::install_github("Onhech/TraitGraph")
library(TraitGraph)
# --- 3. CREATE SAMPLE DATA ---
# Create one master sample data frame for testing.
set.seed(42) # for reproducibility
sample_data <- tibble::tribble(
~name,    ~favourite_color, ~HonestyHumility, ~Emotionality, ~Extroversion, ~Agreeableness, ~Conscientiousness, ~Openness,
"Alice Frank",   "#FF6B6B",         75,               40,            80,            85,             90,                 70,
"Bob Steward",     "#4ECDC4",         80,               45,            75,            90,             85,                 65,
"Frank Bobby",   "#45B7D1",         70,               50,            85,            80,             95,                 75,
"Eve Twingle",     "#F7B801",         85,               70,            75,            80,             40,                 95,
"Grace Hunter",   "#FAD390",         90,               65,            80,            75,             35,                 90,
"Heidi Probosky",   "#FF8C61",         80,               75,            70,            85,             45,                 85,
"Charlie Kane", "#3D5A80",         40,               80,            30,            50,             60,                 45,
"David Turner Salvadora III",   "#98C1D9",         45,               75,            35,            55,             65,                 50,
"Ivan Evans",    "#E0FBFC",         35,               85,            25,            45,             55,                 40,
"Judy Perch",    "#293241",         50,               70,            40,            60,             70,                 55
) %>%
dplyr::mutate(rankedQ_1 = sample(0:80, 10, replace = TRUE))
TG_similarity(
dataset = sample_data[1:8,],
connection_threshold = .5,
columns = similarity_columns,
name = "name",
use_initials = T, # Use full names for clarity
save_plot = T,
output_path = 'ExamplePlots/similarity_graph_example.png',
zoom_out_factor = 1.2
)
similarity_heatmap <- TG_similarity_plot(
dataset = sample_data[1:8,],
columns = similarity_columns,
name = "name",
show_legend = F
)
# Print the plot to the Viewer
print(similarity_heatmap)
similarity_heatmap
similarity_heatmap$data
TG_similarity(
dataset = sample_data[1:8,],
connection_threshold = .5,
columns = similarity_columns,
name = "name",
use_initials = T, # Use full names for clarity
save_plot = T,
output_path = 'ExamplePlots/similarity_graph_example.png',
zoom_out_factor = 1.2
)
remove.packages("TraitGraph")
devtools::clean_dll()
devtools::document()
devtools::load_all()
devtools::install(upgrade = 'always')
library(TraitGraph)            # Load the newly installed package
